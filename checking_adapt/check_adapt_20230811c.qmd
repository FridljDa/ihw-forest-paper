---
title: "check_adapt_2"
format: html
editor: visual
---

```{r}
library(adaptMT)
library(splines)
library(magrittr)
library(dplyr)
#library(mgcv)
library(ggplot2)
set.seed(1)
```

# Load two data sets

## Data set 1

```{r, eval = FALSE}
url <- "https://portals.broadinstitute.org/collaboration/giant/images/f/f0/All_ancestries_SNP_gwas_mc_merge_nogc.tbl.uniq.gz"
tmp <- tempfile()
##
download.file(url,tmp)
##
BMI_GIANT_GWAS <- read.csv(
  gzfile(tmp),
  sep="\t",
  header=TRUE,
  stringsAsFactors=FALSE)
names(BMI_GIANT_GWAS)[1] <- sub("X\\.","",names(BMI_GIANT_GWAS)[1])

BMI_GIANT_GWAS <- BMI_GIANT_GWAS %>%
  select(p, Freq_MAF_Hapmap = Freq1.Hapmap)
```

```{r, include=FALSE}
load(here::here("boca_leek/BMI_GIANT_GWAS.RData"))
BMI_GIANT_GWAS <- BMI_GIANT_GWAS %>%
  filter(chr_name %in% c("1", "10")) %>%
  select(p, Freq_MAF_Hapmap)
nrow(BMI_GIANT_GWAS)
```

```{r}
head(BMI_GIANT_GWAS)
```

dry run

```{r, eval = TRUE}
BMI_GIANT_GWAS_dry <- BMI_GIANT_GWAS #%>%
  #sample_n(2000) #00
```

```{r}
pvals_bmi = BMI_GIANT_GWAS_dry$p
x_bmi = data.frame(x = as.numeric(BMI_GIANT_GWAS_dry$Freq_MAF_Hapmap))
```

## Data set 2

```{r}
data(estrogen)
pvals_estrogen <- as.numeric(estrogen$pvals)
x_estrogen <- data.frame(x = as.numeric(estrogen$ord_high))
```

# Visualise data sets

## Data set 1

```{r}
hist(pvals_bmi)
```

```{r}
hist(x_bmi$x)
```

```{r}
ggplot(BMI_GIANT_GWAS_dry, aes(x = Freq_MAF_Hapmap, y = p)) +
  geom_hex()
```

## Data set 2

```{r}
hist(pvals_estrogen)
```

```{r}
hist(x_estrogen$x)
```

```{r}
ggplot(estrogen, aes(x = ord_high, y = pvals)) +
  geom_hex()
```

# Evauluate `adapt_glm`

```{r}
formulas <- paste0("ns(x, df = ", c(6:7), ")")#1, 3, 
nfits = 5
alpha = c(0.1, 0.2, 0.3)
```

## Data set 1

### BH
```{r}
cat("BH rejects", sum(p.adjust(pvals_bmi, method = "BH") <= 0.3), "at level 0.3\n")
cat("BH rejects", sum(p.adjust(pvals_bmi, method = "BH") <= 0.2), "at level 0.2\n")
cat("BH rejects", sum(p.adjust(pvals_bmi, method = "BH") <= 0.1), "at level 0.1\n")
```

### AdaPT
Trying Adapt

```{r res_1_glm, cache = TRUE}
res_1_glm <- adapt_glm(x = x_bmi, pvals = pvals_bmi, pi_formulas = formulas, mu_formulas = formulas, nfits = nfits, alphas = alpha)


for (i in seq_along(alpha)) {
  print(paste("AdaPT reject", res_1_glm$nrejs[i], "for level", alpha[i]))
}
```

```         
Warning: Initialization of pi(x) by 'pifun_init' fails. Initialize pi(x) as a constant 0.1 by default. Please check if too few p-values lying in [s0, 1-s0] and decrease s0 or change 'pifun_init' if so. Warning: Model 1 fails.
```

To adress the warning, we decrease the `s0`.
```{r, eval = TRUE, include=TRUE}
s0 <- 0.45
while(0.3 >= sum(dplyr::between(pvals_bmi, s0, 1-s0))/length(pvals_bmi)){
  s0 <- s0 - 0.05
}
```

```{r res_3_glm, cache=TRUE, eval = TRUE, include=TRUE}
res_3_glm <- adapt_glm(x = x_bmi, pvals = pvals_bmi, pi_formulas = formulas, mu_formulas = formulas, nfits = nfits, alphas =alpha, s0 = rep(s0, length(pvals_bmi)))

for (i in seq_along(alpha)) {
  print(paste("AdaPT reject", res_3_glm$nrejs[i], "for level", alpha[i]))
}
```
<<<<<<< HEAD

So at alpha = 0.1, 0 rejections at alpha = 0.2, 0 rejections at alpha = 0.3, 582 rejections
=======
>>>>>>> e23f354d8d045eac048e095619310fc472e00f85

So at alpha = 0.1, 0 rejections at alpha = 0.2, 0 rejections at alpha = 0.3, 70377 rejections
```{r, eval = FALSE, include=FALSE}
adaptMT::plot_1d_thresh(res_3_glm, x_bmi, pvals_bmi, 0.3, "P-value Thresholds (alpha = 0.3)", disp_ymax = 0.5)
```

<<<<<<< HEAD
```{r, cache=TRUE}
=======
```{r, eval = FALSE, include=FALSE}
adaptMT::plot_1d_thresh(res_3_glm, x_bmi, pvals_bmi, 0.2, "P-value Thresholds (alpha = 0.2)",
               disp_ymax = 0.5)
```

```{r res_2_glm, cache=TRUE}
>>>>>>> e23f354d8d045eac048e095619310fc472e00f85
#formulas = "~x"
res_2_glm <- IHWForestPaper::adapt_mtp(
  Ps = pvals_bmi,
  Xs = x_bmi,
  alpha = alpha
)
#sum(res_2_glm)
```

<<<<<<< HEAD
=======
```{r res_3_gam, cache=TRUE, eval = TRUE, include=TRUE}
res_3_gam <- adapt_gam(x = x_bmi, pvals = pvals_bmi, pi_formulas = formulas,
                 mu_formulas = formulas, nfits = nfits, alphas =alpha)
res_3_gam$nrejs

for (i in seq_along(alpha)) {
  print(paste("AdaPT reject", res_3_gam$nrejs[i], "for level", alpha[i]))
}
```

>>>>>>> e23f354d8d045eac048e095619310fc472e00f85
## Data set 2

```{r res_4_glm, cache=TRUE}
res_4_glm <- adapt_glm(x = x_estrogen, pvals = pvals_estrogen, pi_formulas = formulas,
                 mu_formulas = formulas, nfits = nfits, alphas = alpha)

for (i in seq_along(alpha)) {
  print(paste("AdaPT reject", res_4_glm$nrejs[i], "for level", alpha[i]))
}
```

```{r}
adaptMT::plot_1d_thresh(res_4_glm, x_estrogen, pvals_estrogen, 0.3, "P-value Thresholds (alpha = 0.3)",
               disp_ymax = 0.5)
```

```{r, eval = FALSE}
unlink(tmp)
```
