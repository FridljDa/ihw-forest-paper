---
title: "adapt_wrapper"
format: html
editor: visual
---

## Clfdr

```{r}
library(IHW)
library(fdrtool)
devtools::load_all(here::here("IHWForestPaper"))

# regular simulation
wasserman_normal_sim <- function(m, pi0, xi_min, xi_max, seed = NULL) {
  if (!is.null(seed)) set.seed(seed)
  
  X <- runif(m, min = xi_min, max = xi_max)
  H <- rbinom(m, 1, 1 - pi0)
  Z <- rnorm(m, H * X)
  pvalue <- 1 - pnorm(Z)
  simDf <- data.frame(pvalue = pvalue, filterstat = X, H = H, Z = Z, noise = 0)
}
m <- 10000
sim_df <- wasserman_normal_sim(m, 0.85, 0, 3, seed = 1)
sim_df$group <- groups_by_filter(sim_df$filterstat, 20)
obj <- clfdr(sim_df$pvalue, sim_df$group, .1)
```

```{r}
rejected_hypotheses.Clfdr(obj)
```

## adaptMT

```{r}
devtools::load_all(here::here("IHWForestPaper/adaptMT"))
devtools::load_all(here::here("IHWForestPaper"))
```

```{r, eval = FALSE}
adapt_xgboost_wrapper <- function(Ps, 
                                  Xs, 
                                  alpha = 0.1) {
  
  res <- adapt_xgboost(as.matrix(Xs), 
                       Ps, 
                       alphas = alpha, 
                       nfits = 5)
  
  
  rejection_position <- res[["rejs"]]
  rejections <- rep(0, length(Ps))
  rejections[rejection_position] <- 1
  rejections
}
```

```{r}
 Xs <- runif(20000, min=0, max=2.5) # covariate
 Hs <- rbinom(20000,1,0.1) # hypothesis true or false
 Zs <- rnorm(20000, Xs*Hs) # Z-score
 Ps <- 1-pnorm(Zs) # pvalue
 res <- adapt_xgboost_wrapper(Ps, Xs, alpha = 0.2)
```

```{r}
sum(res) 
```
