library(IHW)
library(fdrtool)
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
library(tidyr)
library(scales)
library(latex2exp)
library(dplyr)
require(biomaRt)
set.seed(1)
knitr::opts_knit$set(root_dir = "/g/huber/users/fridljand/R/ihw-forest-paper/")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# file_loc <- system.file("extdata", "real_data", "hqtl_chrom1_chrom2", package = "IHWpaper")
# file_loc <- "/g/huber/users/fridljand/R/ihw-forest-paper/data/hqtl_chrom1_chrom2/"
root_dir <- "/g/huber/users/fridljand/R/ihw-forest-paper/"
#root_dir <- "/Users/default/Google Drive/currentDocumants/Studium/Master/3.Semester/Masterarbeit/Code/ihw-forest-paper/data/hqtl_chrom1_chrom2/"
root_dir <- "/Volumes/huber/users/fridljand/R/ihw-forest-paper"
options(bitmapType ="cairo")
snp_chr1 <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/snppos_chr1.Rds")) %>% dplyr::select(snp, pos)
snp_chr2 <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/snppos_chr2.Rds")) %>% dplyr::select(snp, pos)
all_peaks <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/peak_locations.Rds"))
peaks_chr1 <- dplyr::filter(all_peaks, chr == "chr1") %>% dplyr::select(id, start, end)
peaks_chr2 <- dplyr::filter(all_peaks, chr == "chr2") %>% dplyr::select(id, start, end)
rm(all_peaks)
chr1_df <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/chr1_subset.Rds")) %>% dplyr::select(SNP, gene, pvalue)
chr2_df <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/chr2_subset.Rds")) %>% dplyr::select(SNP, gene, pvalue)
pval_threshold <- 10^(-4)
pval_threshold <- 10^(-4)
paste(nrow(snp_chr1), "*", nrow(peaks_chr1), "+", nrow(snp_chr2), "*", nrow(peaks_chr2))
snp_chr1 <- snp_chr1 %>% slice(1:50)
snp_chr2 <- snp_chr2 %>% slice(1:50)
peaks_chr1 <- peaks_chr1[1:100, ]
peaks_chr2 <- peaks_chr2[1:100, ]
chr1_df <- chr1_df %>% slice_sample(n = 1000)
chr2_df <- chr2_df %>% slice_sample(n = 1000)
peaks_chr1 <- peaks_chr1 %>% filter(id %in% chr1_df$gene)
peaks_chr2 <- peaks_chr2 %>% filter(id %in% chr2_df$gene)
snp_chr1 <- snp_chr1 %>% filter(snp %in% chr1_df$SNP)
snp_chr2 <- snp_chr2 %>% filter(snp %in% chr2_df$SNP)
range(snp_chr1$pos)
range(snp_chr2$pos)
c(min(peaks_chr1$start), min(peaks_chr1$end))
c(min(peaks_chr2$start), min(peaks_chr2$end))
full_comb_chr1 <- full_join(snp_chr1, peaks_chr1, by = character()) %>%
transmute(snp, id, #minor_allele_freq,
dist = pmin(abs(pos - start), abs(pos - end))
)
full_comb_chr2 <- full_join(snp_chr2, peaks_chr2, by = character()) %>%
transmute(snp, id, #minor_allele_freq,
dist = pmin(abs(pos - start), abs(pos - end))
)
nrow(full_comb_chr1) + nrow(full_comb_chr2)
library(IHW)
library(fdrtool)
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
library(tidyr)
library(scales)
library(latex2exp)
library(dplyr)
require(biomaRt)
set.seed(1)
knitr::opts_knit$set(root_dir = "/g/huber/users/fridljand/R/ihw-forest-paper/")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# file_loc <- system.file("extdata", "real_data", "hqtl_chrom1_chrom2", package = "IHWpaper")
# file_loc <- "/g/huber/users/fridljand/R/ihw-forest-paper/data/hqtl_chrom1_chrom2/"
root_dir <- "/g/huber/users/fridljand/R/ihw-forest-paper/"
#root_dir <- "/Users/default/Google Drive/currentDocumants/Studium/Master/3.Semester/Masterarbeit/Code/ihw-forest-paper/data/hqtl_chrom1_chrom2/"
root_dir <- "/Volumes/huber/users/fridljand/R/ihw-forest-paper"
options(bitmapType ="cairo")
snp_chr1 <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/snppos_chr1.Rds")) %>% dplyr::select(snp, pos)
snp_chr2 <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/snppos_chr2.Rds")) %>% dplyr::select(snp, pos)
all_peaks <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/peak_locations.Rds"))
peaks_chr1 <- dplyr::filter(all_peaks, chr == "chr1") %>% dplyr::select(id, start, end)
peaks_chr2 <- dplyr::filter(all_peaks, chr == "chr2") %>% dplyr::select(id, start, end)
rm(all_peaks)
chr1_df <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/chr1_subset.Rds")) %>% dplyr::select(SNP, gene, pvalue)
chr2_df <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/chr2_subset.Rds")) %>% dplyr::select(SNP, gene, pvalue)
pval_threshold <- 10^(-4)
paste(nrow(snp_chr1), "*", nrow(peaks_chr1), "+", nrow(snp_chr2), "*", nrow(peaks_chr2))
chr1_df <- chr1_df %>% slice_sample(n = 1000)
chr2_df <- chr2_df %>% slice_sample(n = 1000)
peaks_chr1 <- peaks_chr1 %>% filter(id %in% chr1_df$gene)
peaks_chr2 <- peaks_chr2 %>% filter(id %in% chr2_df$gene)
snp_chr1 <- snp_chr1 %>% filter(snp %in% chr1_df$SNP)
snp_chr2 <- snp_chr2 %>% filter(snp %in% chr2_df$SNP)
full_comb_chr1 <- full_join(snp_chr1, peaks_chr1, by = character()) %>%
transmute(snp, id, #minor_allele_freq,
dist = pmin(abs(pos - start), abs(pos - end))
)
full_comb_chr2 <- full_join(snp_chr2, peaks_chr2, by = character()) %>%
transmute(snp, id, #minor_allele_freq,
dist = pmin(abs(pos - start), abs(pos - end))
)
nrow(full_comb_chr1) + nrow(full_comb_chr2)
chr1_maf <- data.frame(snp = unique(snp_chr1$snp), minor_allele_freq = NA)
chunk_chr1_maf <- split(seq_len(nrow(chr1_maf)), ceiling(seq_len(nrow(chr1_maf)) / 1000))
i <- 1
indices_i <- chunk_chr1_maf[[i]]
refsnp_id_i <- chr1_maf$snp[indices_i]
tmp <- biomaRt::getBM(
attributes = c("refsnp_id", "minor_allele_freq"),
filters = "snp_filter", values = refsnp_id_i,
mart = ensembl, uniqueRows = TRUE
)
ensembl <- biomaRt::useMart("ENSEMBL_MART_SNP", dataset = "hsapiens_snp")
tmp <- biomaRt::getBM(
attributes = c("refsnp_id", "minor_allele_freq"),
filters = "snp_filter", values = refsnp_id_i,
mart = ensembl, uniqueRows = TRUE
)
View(tmp)
tmp <- tmp %>%
rename(snp = refsnp_id) %>%
mutate(minor_allele_freq = replace_na(minor_allele_freq, 0))
View(tmp)
any(is.na(tmp))
#chr1_maf <- data.frame(snp = unique(snp_chr1$snp), minor_allele_freq = NA)
chr1_maf <- list()
chunk_chr1_maf <- split(seq_len(nrow(snp_chr1)), ceiling(seq_len(nrow(snp_chr1)) / 1000))
pb = txtProgressBar(min = 0, max = nrow(snp_chr1), initial = 0)
for (i in seq_along(chunk_chr1_maf)) {
setTxtProgressBar(pb, i)
indices_i <- chunk_chr1_maf[[i]]
refsnp_id_i <- chr1_maf$snp[indices_i]
tmp <- biomaRt::getBM(
attributes = c("refsnp_id", "minor_allele_freq"),
filters = "snp_filter", values = refsnp_id_i,
mart = ensembl, uniqueRows = TRUE
)
tmp <- tmp %>%
rename(snp = refsnp_id) %>%
mutate(minor_allele_freq = replace_na(minor_allele_freq, 0))
chr1_maf[[i]] <- tmp
#chr1_maf <- merge(chr1_maf[, "snp", drop = FALSE], tmp, by = c("snp"), all.x = TRUE)
}
#chr1_maf <- data.frame(snp = unique(snp_chr1$snp), minor_allele_freq = NA)
chr1_maf <- list()
chunk_chr1_maf <- split(seq_len(nrow(snp_chr1)), ceiling(seq_len(nrow(snp_chr1)) / 1000))
pb = txtProgressBar(min = 0, max = nrow(snp_chr1), initial = 0)
for (i in seq_along(chunk_chr1_maf)) {
setTxtProgressBar(pb, i)
indices_i <- chunk_chr1_maf[[i]]
refsnp_id_i <- snp_chr1$snp[indices_i]
tmp <- biomaRt::getBM(
attributes = c("refsnp_id", "minor_allele_freq"),
filters = "snp_filter", values = refsnp_id_i,
mart = ensembl, uniqueRows = TRUE
)
tmp <- tmp %>%
rename(snp = refsnp_id) %>%
mutate(minor_allele_freq = replace_na(minor_allele_freq, 0))
chr1_maf[[i]] <- tmp
#chr1_maf <- merge(chr1_maf[, "snp", drop = FALSE], tmp, by = c("snp"), all.x = TRUE)
}
saveRDS(chr1_maf, file = file.path(root_dir, "data/downloaded_covariates/chr1_maf.Rds"))
View(chr1_maf)
chr1_maf <- rbindlist(chr1_maf)
chr1_maf <- data.table::rbindlist(chr1_maf)
View(chr1_maf)
chr2_maf <- list()
chunk_chr2_maf <- split(seq_len(nrow(snp_chr2)), ceiling(seq_len(nrow(snp_chr2)) / 1000))
pb = txtProgressBar(min = 0, max = nrow(snp_chr2), initial = 0)
for (i in seq_along(chunk_chr2_maf)) {
setTxtProgressBar(pb, i)
indices_i <- chunk_chr2_maf[[i]]
refsnp_id_i <- snp_chr2$snp[indices_i]
tmp <- biomaRt::getBM(
attributes = c("refsnp_id", "minor_allele_freq"),
filters = "snp_filter", values = refsnp_id_i,
mart = ensembl, uniqueRows = TRUE
)
tmp <- tmp %>%
rename(snp = refsnp_id) %>%
mutate(minor_allele_freq = replace_na(minor_allele_freq, 0))
chr2_maf[[i]] <- tmp
#chr2_maf <- merge(chr2_maf[, "snp", drop = FALSE], tmp, by = c("snp"), all.x = TRUE)
}
chr2_maf <- data.table::rbindlist(chr2_maf)
saveRDS(chr2_maf, file = file.path(root_dir, "data/downloaded_covariates/chr2_maf.Rds"))
any(is.na(chr2_maf))
library(IHW)
library(fdrtool)
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
library(tidyr)
library(scales)
library(latex2exp)
library(dplyr)
require(biomaRt)
set.seed(1)
knitr::opts_knit$set(root_dir = "/g/huber/users/fridljand/R/ihw-forest-paper/")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# file_loc <- system.file("extdata", "real_data", "hqtl_chrom1_chrom2", package = "IHWpaper")
# file_loc <- "/g/huber/users/fridljand/R/ihw-forest-paper/data/hqtl_chrom1_chrom2/"
root_dir <- "/g/huber/users/fridljand/R/ihw-forest-paper/"
#root_dir <- "/Users/default/Google Drive/currentDocumants/Studium/Master/3.Semester/Masterarbeit/Code/ihw-forest-paper/data/hqtl_chrom1_chrom2/"
root_dir <- "/Volumes/huber/users/fridljand/R/ihw-forest-paper"
options(bitmapType ="cairo")
snp_chr1 <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/snppos_chr1.Rds")) %>% dplyr::select(snp, pos)
snp_chr2 <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/snppos_chr2.Rds")) %>% dplyr::select(snp, pos)
all_peaks <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/peak_locations.Rds"))
peaks_chr1 <- dplyr::filter(all_peaks, chr == "chr1") %>% dplyr::select(id, start, end)
peaks_chr2 <- dplyr::filter(all_peaks, chr == "chr2") %>% dplyr::select(id, start, end)
rm(all_peaks)
chr1_df <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/chr1_subset.Rds")) %>% dplyr::select(SNP, gene, pvalue)
chr2_df <- readRDS(file.path(root_dir, "data/hqtl_chrom1_chrom2/chr2_subset.Rds")) %>% dplyr::select(SNP, gene, pvalue)
pval_threshold <- 10^(-4)
paste(nrow(snp_chr1), "*", nrow(peaks_chr1), "+", nrow(snp_chr2), "*", nrow(peaks_chr2))
chr1_df <- chr1_df %>% slice_sample(n = 1000)
chr2_df <- chr2_df %>% slice_sample(n = 1000)
peaks_chr1 <- peaks_chr1 %>% filter(id %in% chr1_df$gene)
peaks_chr2 <- peaks_chr2 %>% filter(id %in% chr2_df$gene)
snp_chr1 <- snp_chr1 %>% filter(snp %in% chr1_df$SNP)
snp_chr2 <- snp_chr2 %>% filter(snp %in% chr2_df$SNP)
full_comb_chr1 <- full_join(snp_chr1, peaks_chr1, by = character()) %>%
transmute(snp, id, #minor_allele_freq,
dist = pmin(abs(pos - start), abs(pos - end))
)
full_comb_chr2 <- full_join(snp_chr2, peaks_chr2, by = character()) %>%
transmute(snp, id, #minor_allele_freq,
dist = pmin(abs(pos - start), abs(pos - end))
)
nrow(full_comb_chr1) + nrow(full_comb_chr2)
chr1_maf <- data.frame(snp = unique(snp_chr1$snp), minor_allele_freq = NA)
chunk_chr1_maf <- split(seq_len(nrow(chr1_maf)), ceiling(seq_len(nrow(chr1_maf)) / 1000))
pb = txtProgressBar(min = 0, max = nrow(chr1_maf), initial = 0)
for (i in seq_along(chunk_chr1_maf)) {
setTxtProgressBar(pb, i)
indices_i <- chunk_chr1_maf[[i]]
refsnp_id_i <- chr1_maf$snp[indices_i]
tmp <- biomaRt::getBM(
attributes = c("refsnp_id", "minor_allele_freq"),
filters = "snp_filter", values = refsnp_id_i,
mart = ensembl, uniqueRows = TRUE
)
tmp <- tmp %>%
rename(snp = refsnp_id) %>%
mutate(minor_allele_freq = replace_na(minor_allele_freq, 0))
chr1_maf <- merge(chr1_maf[, "snp", drop = FALSE], tmp, by = c("snp"), all.x = TRUE)
}
chr1_maf <- chr1_maf %>% mutate(minor_allele_freq = replace_na(minor_allele_freq, 0)) #TODO
saveRDS(chr1_maf, file = file.path(root_dir, "data/downloaded_covariates/chr1_maf.Rds"))
chr2_maf <- data.frame(snp = unique(snp_chr2$snp), minor_allele_freq = NA)
chunk_chr2_maf <- split(seq_len(nrow(chr2_maf)), ceiling(seq_len(nrow(chr2_maf)) / 1000))
pb = txtProgressBar(min = 0, max = nrow(chr2_maf), initial = 0)
for (i in seq_along(chunk_chr2_maf)) {
setTxtProgressBar(pb, i)
indices_i <- chunk_chr2_maf[[i]]
refsnp_id_i <- chr2_maf$snp[indices_i]
tmp <- biomaRt::getBM(
attributes = c("refsnp_id", "minor_allele_freq"),
filters = "snp_filter", values = refsnp_id_i,
mart = ensembl, uniqueRows = TRUE
)
tmp <- tmp %>%
rename(snp = refsnp_id) %>%
mutate(minor_allele_freq = replace_na(minor_allele_freq, 0))
chr2_maf <- merge(chr2_maf[, "snp", drop = FALSE], tmp, by = c("snp"), all.x = TRUE)
}
chr2_maf <- chr2_maf %>% mutate(minor_allele_freq = replace_na(minor_allele_freq, 0)) #TODO
saveRDS(chr2_maf, file = file.path(root_dir, "data/downloaded_covariates/chr2_maf.Rds"))
